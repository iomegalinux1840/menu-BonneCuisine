<div class="restaurant-container">
  <header class="restaurant-header">
    <div class="logo-container">
      <div class="logo-wrapper">
        <svg width="300" height="200" viewBox="0 0 300 200" xmlns="http://www.w3.org/2000/svg" class="restaurant-logo">
          <!-- Pot lid icon at top -->
          <path d="M150 30 Q130 25 110 30 L115 35 Q150 28 185 35 L190 30 Q170 25 150 30" fill="#2B5797" stroke="#2B5797" stroke-width="2"/>
          <rect x="145" y="20" width="10" height="10" rx="2" fill="#2B5797"/>

          <!-- La Bonne text -->
          <text x="150" y="90" font-family="'Brush Script MT', cursive" font-size="42" font-weight="bold" fill="#2B5797" text-anchor="middle" font-style="italic">
            La Bonne
          </text>

          <!-- Cuisine text -->
          <text x="150" y="130" font-family="'Brush Script MT', cursive" font-size="38" font-weight="bold" fill="#2B5797" text-anchor="middle" font-style="italic">
            Cuisine
          </text>
        </svg>
        <p class="tagline">Restaurant Français Authentique</p>
      </div>
    </div>
  </header>

  <main class="menu-section">
    <h2 class="menu-title">Notre Carte</h2>

    <div class="menu-grid" id="menu-grid">
      <%= render partial: 'menu_item', collection: @menu_items, as: :menu_item %>
    </div>

    <% if @menu_items.empty? %>
      <div class="empty-menu">
        <p>Aucun plat disponible pour le moment.</p>
      </div>
    <% end %>
  </main>

  <footer class="restaurant-footer">
    <p>&copy; <%= Date.current.year %> La Bonne Cuisine. Tous droits réservés.</p>
  </footer>
</div>

<script>
  // ActionCable for real-time updates
  (function() {
    // Create WebSocket connection
    const cable = ActionCable.createConsumer('<%= Rails.application.config.action_cable.url || "/cable" %>');

    // Subscribe to MenuChannel
    cable.subscriptions.create("MenuChannel", {
      connected: function() {
        console.log("Connected to MenuChannel for real-time updates");
      },

      disconnected: function() {
        console.log("Disconnected from MenuChannel");
      },

      received: function(data) {
        console.log("Received data:", data);

        if (data.action === 'update' && data.html) {
          // Update the entire menu grid with new HTML
          const menuGrid = document.getElementById('menu-grid');
          if (menuGrid) {
            menuGrid.innerHTML = data.html;
            menuGrid.classList.add('updating');
            setTimeout(() => {
              menuGrid.classList.remove('updating');
            }, 300);
          }
        } else if (data.action === 'delete' && data.id) {
          // Remove deleted item
          const item = document.querySelector(`[data-menu-item-id="${data.id}"]`);
          if (item) {
            item.style.opacity = '0';
            setTimeout(() => item.remove(), 300);
          }
        }
      }
    });
  })();
</script>